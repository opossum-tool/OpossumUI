{
  "name": "opossum-ui",
  "description": "The OpossumUI enables the editing of attribution information that is assigned to a resource tree.",
  "license": "Apache-2.0",
  "version": "0.1.0",
  "private": true,
  "homepage": "./",
  "dependencies": {
    "@emotion/react": "^11.8.2",
    "@emotion/styled": "^11.8.1",
    "@mui/icons-material": "^5.5.1",
    "@mui/lab": "^5.0.0-alpha.75",
    "@mui/material": "^5.5.3",
    "@mui/styles": "^5.5.3",
    "axios": "^0.26.1",
    "clsx": "^1.1.1",
    "electron-devtools-installer": "^3.2.0",
    "electron-is-dev": "^2.0.0",
    "electron-log": "^4.4.6",
    "fast-csv": "^4.3.6",
    "js-yaml": "^4.1.0",
    "jsonschema": "^1.2.6",
    "lodash": "^4.17.21",
    "object-hash": "^3.0.0",
    "packageurl-js": "^0.0.6",
    "react": "^18.0.0",
    "react-dom": "^18.0.0",
    "react-query": "^3.34.19",
    "react-redux": "^7.2.8",
    "react-window": "^1.8.5",
    "redux": "^4.1.2",
    "redux-thunk": "^2.4.1",
    "spdx-license-ids": "^3.0.11",
    "stream-json": "^1.7.4",
    "upath": "^2.0.1",
    "url": "^0.11.0",
    "uuid": "^8.3.0",
    "write-file-atomic": "^4.0.1"
  },
  "devDependencies": {
    "@testing-library/dom": "^8.13.0",
    "@testing-library/jest-dom": "^5.16.4",
    "@testing-library/react": "^13.0.0",
    "@testing-library/react-hooks": "^7.0.2",
    "@types/electron-devtools-installer": "^2.2.1",
    "@types/js-yaml": "^4.0.5",
    "@types/lodash": "^4.14.181",
    "@types/object-hash": "^2.2.1",
    "@types/react": "^17.0.43",
    "@types/react-dom": "^17.0.14",
    "@types/react-redux": "^7.1.23",
    "@types/react-window": "^1.8.5",
    "@types/stream-json": "^1.7.2",
    "@types/uuid": "^8.3.4",
    "@types/write-file-atomic": "^4.0.0",
    "@typescript-eslint/eslint-plugin": "^5.18.0",
    "@typescript-eslint/parser": "^5.18.0",
    "axios-mock-adapter": "^1.20.0",
    "concurrently": "^7.1.0",
    "cross-env": "^7.0.3",
    "electron": "^18.0.2",
    "electron-builder": "^23.0.2",
    "eslint": "^8.12.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-filenames": "^1.3.2",
    "eslint-plugin-jest-dom": "^4.0.1",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.29.4",
    "eslint-plugin-react-hooks": "^4.4.0",
    "eslint-plugin-testing-library": "^5.2.1",
    "husky": "7.0.4",
    "jest-each": "^27.5.1",
    "lint-staged": "^12.3.7",
    "mockdate": "^3.0.5",
    "nunjucks": "^3.2.3",
    "playwright": "^1.20.2",
    "prettier": "^2.6.2",
    "react-scripts": "5.0.0",
    "redux-devtools-extension": "^2.13.9",
    "run-script-os": "^1.1.6",
    "setimmediate": "^1.0.5",
    "typescript": "^4.6.3",
    "wait-on": "^6.0.1"
  },
  "scripts": {
    "start": "run-script-os",
    "start:darwin:linux": "concurrently \"yarn build:dev; BROWSER=none ESLINT_NO_DEV_ERRORS=true react-scripts start\" \"wait-on http://127.0.0.1:3000 && electron .\"",
    "start:win32": "concurrently \"yarn build:dev & cross-env BROWSER=none ESLINT_NO_DEV_ERRORS=true react-scripts start\" \"wait-on http://127.0.0.1:3000 && electron .\"",
    "build:dev": "run-script-os",
    "build:dev:darwin:linux": "yarn generate-notice && DISABLE_ESLINT_PLUGIN=true react-scripts build && tsc -p src/ElectronBackend",
    "build:dev:win32": "yarn generate-notice && cross-env DISABLE_ESLINT_PLUGIN=true react-scripts build && tsc -p src/ElectronBackend",
    "build:prod": "yarn generate-notice && react-scripts build && tsc -p src/ElectronBackend",
    "compile-all": "tsc -p ./ && tsc --noEmit -p src/ElectronBackend",
    "test:unit": "react-scripts test --watchAll=false --setupFilesAfterEnv=./setupTests.ts --testPathIgnorePatterns=src/e2e-tests --testPathIgnorePatterns=src/Frontend/integration-tests",
    "test:local": "react-scripts test --watchAll=false src/ --setupFilesAfterEnv=./setupTests.ts --testPathIgnorePatterns=src/e2e-tests --testMatch=[ \"**/__tests__/**/*.ts?(x)\" ]",
    "test:all": "react-scripts test --watchAll=false src/ --setupFilesAfterEnv=./setupTests.ts --testPathIgnorePatterns=src/e2e-tests --testMatch=[ \"**/__(tests|tests-ci)__/**/*.ts?(x)\", \"**/?(*.)+(test).ts?(x)\" ] && yarn test:e2e",
    "test:integration-ci": "react-scripts test --watchAll=false src/Frontend/integration-tests --setupFilesAfterEnv=./setupTests.ts --testMatch=[ \"**/__(tests|tests-ci)__/**/*.ts?(x)\", \"**/?(*.)+(test).ts?(x)\" ]",
    "test:e2e": "run-script-os",
    "test:e2e:darwin:linux": "concurrently -s first -k true \"yarn build:dev; BROWSER=none react-scripts start\" \"wait-on http://127.0.0.1:3000 && react-scripts test --watchAll=false --detectOpenHandles --forceExit src/e2e-tests\"",
    "test:e2e:win32": "concurrently -s first -k true \"yarn build:dev & cross-env BROWSER=none react-scripts start\" \"wait-on http://127.0.0.1:3000 && react-scripts test --watchAll=false --detectOpenHandles --forceExit src/e2e-tests\"",
    "lint": "eslint -c .eslintrc.js \"src/**/*.{ts,tsx}\" --fix",
    "lint-check": "eslint -c .eslintrc.js \"src/**/*.{ts,tsx}\"",
    "copyright-lint-check": "reuse lint",
    "update-commit-hash": "run-script-os",
    "update-commit-hash:darwin:linux": "COMMIT_INFO=$(git describe --exact-match --tags 2> /dev/null || git rev-parse --short HEAD); echo \"{\\\"commitInfo\\\" : \\\"$COMMIT_INFO\\\" }\" > \"src/commitInfo.json\";\n",
    "update-commit-hash:win32": "echo {\"commitInfo\" : \"unknown-version\" } > \"src\\commitInfo.json\"",
    "generate-notice": "run-script-os",
    "generate-notice:darwin:linux": "mkdir -p notices && yarn licenses generate-disclaimer --ignore-platform --production > notices/notices.txt && yarn node build_scripts/generateNotices.js",
    "generate-notice:win32": "(if not exist notices (mkdir notices)) && yarn licenses generate-disclaimer --ignore-platform --production > notices/notices.txt && yarn node build_scripts/generateNotices.js",
    "ship-linux": "yarn build:prod && electron-builder --linux --x64 --publish never && mkdir -p release/linux && mv 'release/OpossumUI-0.1.0.AppImage' 'release/linux/OpossumUI-for-linux.AppImage'",
    "ship-win": "run-script-os",
    "ship-win:darwin:linux": "yarn build:prod && electron-builder --win --x64 --publish never && mkdir -p release/win && mv \"release/OpossumUI Setup 0.1.0.exe\" \"release/win/OpossumUI-for-win.exe\"",
    "ship-win:win32": "yarn build:prod && electron-builder --win --x64 --publish never && cd release && (if not exist win (mkdir win)) && move \"OpossumUI Setup 0.1.0.exe\" \"win/OpossumUI-for-win.exe\" && cd ..",
    "ship-mac": "yarn build:prod && electron-builder --mac --x64 --publish never && zip -r -q 'release/mac/OpossumUI-for-mac.zip' 'release/mac/'",
    "ship": "yarn ship-linux && yarn ship-win && yarn ship-mac",
    "clean": "rm -rf ./build/ ./release/",
    "postinstall": "husky install && yarn update-commit-hash",
    "pre-commit": "lint-staged"
  },
  "main": "build/ElectronBackend/app.js",
  "build": {
    "productName": "OpossumUI",
    "appId": "opossum_ui_electron",
    "directories": {
      "buildResources": "build",
      "output": "release"
    },
    "mac": {
      "target": "dmg",
      "icon": "public/icons/icon_512x512.png"
    },
    "win": {
      "target": "nsis",
      "icon": "public/icons/icon_512x512.png"
    },
    "linux": {
      "target": "AppImage",
      "icon": "public/icons/icon_512x512.png"
    },
    "extraMetadata": {
      "main": "build/ElectronBackend/app.js"
    },
    "extraResources": [
      "./notices/**"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      "Chrome 100"
    ],
    "development": [
      "Chrome 100"
    ]
  },
  "lint-staged": {
    "**/*.{ts,tsx}": [
      "./run_precommit.sh"
    ]
  },
  "jest": {
    "resetMocks": false
  },
  "resolutions": {
    "nth-check": "^2.0.1",
    "postcss": "^8.2.13",
    "node-forge": "^1.0.0"
  }
}
