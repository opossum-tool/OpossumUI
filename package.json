{
  "name": "opossum-ui",
  "description": "The OpossumUI enables the editing of attribution information that is assigned to a resource tree.",
  "license": "Apache-2.0",
  "version": "0.1.0",
  "private": true,
  "homepage": "./",
  "dependencies": {
    "@babel/core": "7.12.3",
    "@emotion/react": "^11.7.0",
    "@emotion/styled": "^11.6.0",
    "@mui/icons-material": "^5.2.0",
    "@mui/lab": "^5.0.0-alpha.58",
    "@mui/material": "^5.2.2",
    "@mui/styles": "^5.2.2",
    "@pmmmwh/react-refresh-webpack-plugin": "0.4.3",
    "@svgr/webpack": "5.5.0",
    "@typescript-eslint/eslint-plugin": "^4.5.0",
    "@typescript-eslint/parser": "^4.5.0",
    "babel-eslint": "^10.1.0",
    "babel-jest": "^26.6.0",
    "babel-loader": "8.1.0",
    "babel-plugin-named-asset-import": "^0.3.7",
    "babel-preset-react-app": "^10.0.0",
    "bfj": "^7.0.2",
    "camelcase": "^6.1.0",
    "case-sensitive-paths-webpack-plugin": "2.3.0",
    "clsx": "^1.1.1",
    "comlink": "^4.3.1",
    "css-loader": "4.3.0",
    "dotenv": "8.2.0",
    "dotenv-expand": "5.1.0",
    "electron-devtools-installer": "^3.2.0",
    "electron-is-dev": "^2.0.0",
    "electron-log": "^4.4.1",
    "eslint": "^7.11.0",
    "eslint-config-react-app": "^6.0.0",
    "eslint-plugin-flowtype": "^5.2.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jest": "^24.1.0",
    "eslint-plugin-jsx-a11y": "^6.3.1",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-react-hooks": "^4.2.0",
    "eslint-plugin-testing-library": "^3.9.2",
    "eslint-webpack-plugin": "^2.5.2",
    "fast-csv": "^4.3.6",
    "file-loader": "6.1.1",
    "fs-extra": "^9.0.1",
    "html-webpack-plugin": "4.5.0",
    "identity-obj-proxy": "3.0.0",
    "jest": "26.6.0",
    "jest-circus": "26.6.0",
    "jest-resolve": "26.6.0",
    "jest-watch-typeahead": "0.6.1",
    "js-yaml": "^4.1.0",
    "jsonschema": "^1.2.6",
    "lodash": "^4.17.21",
    "mini-css-extract-plugin": "0.11.3",
    "object-hash": "^2.2.0",
    "optimize-css-assets-webpack-plugin": "5.0.4",
    "packageurl-js": "^0.0.5",
    "pnp-webpack-plugin": "1.6.4",
    "postcss-flexbugs-fixes": "4.2.1",
    "postcss-loader": "3.0.0",
    "postcss-normalize": "8.0.1",
    "postcss-preset-env": "6.7.0",
    "postcss-safe-parser": "5.0.2",
    "prompts": "2.4.0",
    "react": "^17.0.2",
    "react-app-polyfill": "^2.0.0",
    "react-dev-utils": "^11.0.3",
    "react-dom": "^17.0.2",
    "react-redux": "^7.2.6",
    "react-refresh": "^0.8.3",
    "react-window": "^1.8.5",
    "redux": "^4.1.2",
    "redux-thunk": "^2.4.1",
    "resolve": "1.18.1",
    "resolve-url-loader": "^3.1.2",
    "sass-loader": "^10.0.5",
    "semver": "7.3.2",
    "spdx-license-ids": "^3.0.11",
    "stream-json": "^1.7.2",
    "style-loader": "1.3.0",
    "terser-webpack-plugin": "4.2.3",
    "ts-pnp": "1.2.0",
    "upath": "^2.0.1",
    "url-loader": "4.1.1",
    "uuid": "^8.3.0",
    "webpack": "4.44.2",
    "webpack-dev-server": "3.11.1",
    "webpack-manifest-plugin": "2.2.0",
    "workbox-webpack-plugin": "5.1.4",
    "write-file-atomic": "^3.0.3"
  },
  "devDependencies": {
    "@testing-library/dom": "^8.11.1",
    "@testing-library/jest-dom": "^5.15.1",
    "@testing-library/react": "^12.1.2",
    "@types/electron-devtools-installer": "^2.2.0",
    "@types/js-yaml": "^4.0.5",
    "@types/lodash": "^4.14.177",
    "@types/object-hash": "^2.2.1",
    "@types/react": "^17.0.37",
    "@types/react-dom": "^17.0.11",
    "@types/react-redux": "^7.1.20",
    "@types/react-window": "^1.8.5",
    "@types/stream-json": "^1.7.1",
    "@types/uuid": "^8.3.3",
    "@types/write-file-atomic": "^3.0.2",
    "@typescript-eslint/eslint-plugin": "^5.5.0",
    "@typescript-eslint/parser": "^5.5.0",
    "concurrently": "^6.4.0",
    "cross-env": "^7.0.3",
    "electron": "^13.6.3",
    "electron-builder": "^22.14.5",
    "eslint": "^7.32.0",
    "eslint-config-prettier": "^8.3.0",
    "eslint-plugin-prettier": "^4.0.0",
    "eslint-plugin-react": "^7.27.1",
    "eslint-plugin-react-hooks": "^4.3.0",
    "eslint-plugin-testing-library": "^5.0.1",
    "husky": "7.0.4",
    "jest-each": "^27.4.2",
    "lint-staged": "^12.1.2",
    "mockdate": "^3.0.5",
    "nunjucks": "^3.2.3",
    "playwright": "^1.17.1",
    "prettier": "^2.5.0",
    "react-app-rewired": "^2.1.8",
    "redux-devtools-extension": "^2.13.9",
    "run-script-os": "^1.1.6",
    "typescript": "^4.5.2",
    "wait-on": "^6.0.0",
    "worker-plugin": "^5.0.1"
  },
  "scripts": {
    "start": "run-script-os",
    "start:darwin:linux": "concurrently \"yarn build:dev; BROWSER=none ESLINT_NO_DEV_ERRORS=true node scripts/start.js\" \"wait-on http://localhost:3000 && electron .\"",
    "start:win32": "concurrently \"yarn build:dev & cross-env BROWSER=none ESLINT_NO_DEV_ERRORS=true node scripts/start.js\" \"wait-on http://localhost:3000 && electron .\"",
    "build:dev": "run-script-os",
    "build:dev:darwin:linux": "yarn generate-notice && DISABLE_ESLINT_PLUGIN=true node scripts/build.js && tsc -p src/ElectronBackend",
    "build:dev:win32": "yarn generate-notice && cross-env DISABLE_ESLINT_PLUGIN=true node scripts/build.js && tsc -p src/ElectronBackend",
    "build:prod": "yarn generate-notice && node scripts/build.js && tsc -p src/ElectronBackend",
    "compile-all": "tsc -p ./ && tsc --noEmit -p src/ElectronBackend",
    "test:unit": "node scripts/test.js --watchAll=false --testPathIgnorePatterns=src/e2e-tests --testPathIgnorePatterns=src/Frontend/integration-tests",
    "test:local": "node scripts/test.js --watchAll=false src/ --testPathIgnorePatterns=src/e2e-tests --testMatch=[ \"**/__tests__/**/*.ts?(x)\" ]",
    "test:all": "react-app-rewired test --watchAll=false src/ --testPathIgnorePatterns=src/e2e-tests --testMatch=[ \"**/__(tests|tests-ci)__/**/*.ts?(x)\", \"**/?(*.)+(test).ts?(x)\" ] && yarn test:e2e",
    "test:integration-ci": "node scripts/test.js --watchAll=false src/Frontend/integration-tests --testMatch=[ \"**/__(tests|tests-ci)__/**/*.ts?(x)\", \"**/?(*.)+(test).ts?(x)\" ]",
    "test:e2e": "run-script-os",
    "test:e2e:darwin:linux": "concurrently -s first -k true \"yarn build:dev; BROWSER=none node scripts/start.js\" \"wait-on http://localhost:3000 && node scripts/test.js --watchAll=false --detectOpenHandles --forceExit src/e2e-tests\"",
    "test:e2e:win32": "concurrently -s first -k true \"yarn build:dev & cross-env BROWSER=none react-app-rewired start\" \"wait-on http://localhost:3000 && react-app-rewired test --watchAll=false --detectOpenHandles --forceExit src/e2e-tests\"",
    "lint": "eslint -c .eslintrc.js \"src/**/*.{ts,tsx}\" --fix",
    "lint-check": "eslint -c .eslintrc.js \"src/**/*.{ts,tsx}\"",
    "copyright-lint-check": "reuse lint",
    "update-commit-hash": "run-script-os",
    "update-commit-hash:darwin:linux": "COMMIT_INFO=$(git describe --exact-match --tags 2> /dev/null || git rev-parse --short HEAD); echo \"{\\\"commitInfo\\\" : \\\"$COMMIT_INFO\\\" }\" > \"src/commitInfo.json\";\n",
    "update-commit-hash:win32": "echo {\"commitInfo\" : \"unknown-version\" } > \"src\\commitInfo.json\"",
    "generate-notice": "run-script-os",
    "generate-notice:darwin:linux": "mkdir -p notices && yarn licenses generate-disclaimer --ignore-platform --production > notices/notices.txt && yarn node build_scripts/generateNotices.js",
    "generate-notice:win32": "(if not exist notices (mkdir notices)) && yarn licenses generate-disclaimer --ignore-platform --production > notices/notices.txt && yarn node build_scripts/generateNotices.js",
    "ship-linux": "yarn build:prod && electron-builder --linux --x64 --publish never && mkdir -p release/linux && mv 'release/OpossumUI-0.1.0.AppImage' 'release/linux/OpossumUI-for-linux.AppImage'",
    "ship-win": "run-script-os",
    "ship-win:darwin:linux": "yarn build:prod && electron-builder --win --x64 --publish never && mkdir -p release/win && mv \"release/OpossumUI Setup 0.1.0.exe\" \"release/win/OpossumUI-for-win.exe\"",
    "ship-win:win32": "yarn build:prod && electron-builder --win --x64 --publish never && cd release && (if not exist win (mkdir win)) && move \"OpossumUI Setup 0.1.0.exe\" \"win/OpossumUI-for-win.exe\" && cd ..",
    "ship-mac": "yarn build:prod && electron-builder --mac --x64 --publish never && zip -r -q 'release/mac/OpossumUI-for-mac.zip' 'release/mac/'",
    "ship": "yarn ship-linux && yarn ship-win && yarn ship-mac",
    "clean": "rm -rf ./build/ ./release/",
    "postinstall": "husky install && yarn update-commit-hash",
    "pre-commit": "lint-staged"
  },
  "main": "build/ElectronBackend/app.js",
  "build": {
    "productName": "OpossumUI",
    "appId": "opossum_ui_electron",
    "directories": {
      "buildResources": "build",
      "output": "release"
    },
    "mac": {
      "target": "dmg",
      "icon": "public/icons/icon_512x512.png"
    },
    "win": {
      "target": "nsis",
      "icon": "public/icons/icon_512x512.png"
    },
    "linux": {
      "target": "AppImage",
      "icon": "public/icons/icon_512x512.png"
    },
    "extraMetadata": {
      "main": "build/ElectronBackend/app.js"
    },
    "extraResources": [
      "./notices/**"
    ]
  },
  "eslintConfig": {
    "extends": "react-app"
  },
  "browserslist": {
    "production": [
      "Chrome 91"
    ],
    "development": [
      "Chrome 91"
    ]
  },
  "lint-staged": {
    "**/*.{ts,tsx}": [
      "./run_precommit.sh"
    ]
  },
  "jest": {
    "roots": [
      "<rootDir>/src"
    ],
    "collectCoverageFrom": [
      "src/**/*.{js,jsx,ts,tsx}",
      "!src/**/*.d.ts"
    ],
    "setupFiles": [
      "react-app-polyfill/jsdom"
    ],
    "setupFilesAfterEnv": [],
    "testMatch": [
      "<rootDir>/src/**/__tests__/**/*.{js,jsx,ts,tsx}",
      "<rootDir>/src/**/*.{spec,test}.{js,jsx,ts,tsx}"
    ],
    "testEnvironment": "jsdom",
    "testRunner": "C:\\Users\\lesli\\IdeaProjects\\OpossumUI\\node_modules\\jest-circus\\runner.js",
    "transform": {
      "^.+\\.(js|jsx|mjs|cjs|ts|tsx)$": "<rootDir>/config/jest/babelTransform.js",
      "^.+\\.css$": "<rootDir>/config/jest/cssTransform.js",
      "^(?!.*\\.(js|jsx|mjs|cjs|ts|tsx|css|json)$)": "<rootDir>/config/jest/fileTransform.js"
    },
    "transformIgnorePatterns": [
      "[/\\\\]node_modules[/\\\\].+\\.(js|jsx|mjs|cjs|ts|tsx)$",
      "^.+\\.module\\.(css|sass|scss)$"
    ],
    "modulePaths": [],
    "moduleNameMapper": {
      "^react-native$": "react-native-web",
      "^.+\\.module\\.(css|sass|scss)$": "identity-obj-proxy"
    },
    "moduleFileExtensions": [
      "web.js",
      "js",
      "web.ts",
      "ts",
      "web.tsx",
      "tsx",
      "json",
      "web.jsx",
      "jsx",
      "node"
    ],
    "watchPlugins": [
      "jest-watch-typeahead/filename",
      "jest-watch-typeahead/testname"
    ],
    "resetMocks": false
  },
  "resolutions": {
    "immer": "^9.0.6",
    "browserslist": "^4.16.5",
    "glob-parent": "^5.1.2",
    "ansi-html": "https://registry.npmjs.org/ansi-html-community/-/ansi-html-community-0.0.8.tgz",
    "set-value": "^4.0.1",
    "nth-check": "^2.0.1",
    "ansi-regex": "^5.0.1"
  },
  "babel": {
    "presets": [
      "react-app"
    ]
  }
}
